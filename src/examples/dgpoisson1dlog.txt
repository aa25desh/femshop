######################################
# Femshop Log for: dgpoisson1d
######################################

1.	Building simple line mesh with nx elements, nx=19
2.	Added mesh with 20 vertices and 19 elements.
3.	Full grid has 57 nodes.
4.	Grid building took 1.4647716 seconds
5.	Added variable: u of type: scalar
6.	Set test function symbol: v of type: scalar
7.	Boundary condition: var=u bid=1 type=Dirichlet val=0
8.	Generated function: genfunction_0
9.	Added coefficient f : -pi*pi*sin(pi*x)
10.	Added coefficient alpha : 1000
11.	Making weak form for variable(s): u
12.	Weak form, input: -dot(grad(u), grad(v)) - f*v + surface(dot(ave(grad(u)), jump(v)) + dot(ave(grad(v)), jump(u)) - alpha*dot(jump(u), jump(v)))
13.	Weak form, symbolic layer:
lhs1 = -D1__u_1*D1__v_1 + surface(SymEngine.Basic[0.5*DGSIDE1__u_1*DGSIDE1_D1__v_1*_DGNORMAL1_1, 0.5*DGSIDE1__u_1*DGSIDE2_D1__v_1*_DGNORMAL1_1, 0.5*DGSIDE1__v_1*DGSIDE1_D1__u_1*_DGNORMAL1_1, 0.5*DGSIDE1__v_1*DGSIDE2_D1__u_1*_DGNORMAL1_1, 0.5*DGSIDE2__u_1*DGSIDE1_D1__v_1*_DGNORMAL2_1, 0.5*DGSIDE2__u_1*DGSIDE2_D1__v_1*_DGNORMAL2_1, 0.5*DGSIDE2__v_1*DGSIDE1_D1__u_1*_DGNORMAL2_1, 0.5*DGSIDE2__v_1*DGSIDE2_D1__u_1*_DGNORMAL2_1, -DGSIDE1__v_1*DGSIDE1__u_1*_DGNORMAL1_1^2*_alpha_1, -DGSIDE2__v_1*DGSIDE2__u_1*_DGNORMAL2_1^2*_alpha_1, -DGSIDE2__u_1*DGSIDE1__v_1*_DGNORMAL2_1*_DGNORMAL1_1*_alpha_1, -DGSIDE2__v_1*DGSIDE1__u_1*_DGNORMAL2_1*_DGNORMAL1_1*_alpha_1])

rhs1 = _v_1*_f_1 + surface(SymEngine.Basic[])

14.	Weak form, code layer: LHS = begin
    var = args[1]
    x = args[2]
    gbl = args[3]
    refel = args[4]
    borl = args[5]
    time = args[6]
    stiffness = args[8]
    mass = args[9]
    (detJ, J) = geometric_factors(refel, x)
    wgdetj = refel.wg .* detJ
    return -(stiffness[1])
end
surfaceLHS = begin
    var = args[1]
    refel = args[2]
    fid = args[3]
    frefel = args[4]
    fnodes = args[5]
    flocal = args[6]
    face2glb = args[7]
    normal = args[8]
    faceBID = args[9]
    face_detJ = args[10]
    face_J = args[11]
    vol_J1 = args[12]
    vol_J2 = args[13]
    face_wgdetj = args[14]
    borl = args[15]
    time = args[16]
    dt = args[17]
    Q1 = zeros(size(fnodes, 2))
    Q2 = zeros(size(fnodes, 2))
    for i = 1:size((frefel[1]).Q, 2)
        Q1 = Q1 + (frefel[1]).Q[:, i]
        Q2 = Q2 + (frefel[2]).Q[:, i]
    end
    RQ1_1 = (frefel[1]).Qr[:, flocal[1]] .* vol_J1.rx[1]
    RQ2_1 = (frefel[2]).Qr[:, flocal[2]] .* vol_J2.rx[1]
    TRQ1_1 = RQ1_1'
    TRQ2_1 = RQ2_1'
    coef_DGSIDE11_1 = 1000
    coef_DGSIDE21_1 = 1000
    element_matrixLL = .+(TRQ1_1 * (diagm(face_wgdetj .* (0.5 .* normal[1])) * Q1), Q1' * (diagm(face_wgdetj .* (0.5 .* normal[1])) * RQ1_1), -(Q1' * (diagm(face_wgdetj .* (coef_DGSIDE11_1 .* normal[1] .^ 2)) * Q1)))
    element_matrixLR = .+(Q1' * (diagm(face_wgdetj .* (0.5 .* normal[1])) * RQ2_1), TRQ1_1 * (diagm(face_wgdetj .* (0.5 .* -(normal[1]))) * Q2), -(Q1' * (diagm(face_wgdetj .* ((-(normal[1]) .* normal[1]) .* coef_DGSIDE21_1)) * Q2)))
    element_matrixRL = .+(TRQ2_1 * (diagm(face_wgdetj .* (0.5 .* normal[1])) * Q1), Q2' * (diagm(face_wgdetj .* (0.5 .* -(normal[1]))) * RQ1_1), -(Q2' * (diagm(face_wgdetj .* ((-(normal[1]) .* normal[1]) .* coef_DGSIDE11_1)) * Q1)))
    element_matrixRR = .+(TRQ2_1 * (diagm(face_wgdetj .* (0.5 .* -(normal[1]))) * Q2), Q2' * (diagm(face_wgdetj .* (0.5 .* -(normal[1]))) * RQ2_1), -(Q2' * (diagm(face_wgdetj .* (coef_DGSIDE21_1 .* (-(normal[1])) .^ 2)) * Q2)))
    return (element_matrixLL, element_matrixLR, element_matrixRL, element_matrixRR)
end 
RHS = begin
    var = args[1]
    x = args[2]
    gbl = args[3]
    refel = args[4]
    borl = args[5]
    time = args[6]
    stiffness = args[8]
    mass = args[9]
    (detJ, J) = geometric_factors(refel, x)
    wgdetj = refel.wg .* detJ
    coef_0_1 = zeros(refel.Np)
    for coefi = 1:refel.Np
        coef_0_1[coefi] = (Femshop.genfunctions[1]).func(x[coefi], 0, 0, time)
    end
    return mass * coef_0_1
end
surfaceRHS = begin
    b = zeros(size(args[5], 2) * 1)
    return (b, b)
end
15.	Generated function: genfunction_1
16.	Generated function: genfunction_2
17.	Generated function: genfunction_3
18.	Generated function: genfunction_4
19.	Elemental loop time:     0.4380002021789551
20.	Assembly took 0.711857999 seconds
21.	Linear solve took 0.105082099 seconds
22.	Solved for u.(took 1.1046955 seconds)
23.	Completed. Closing Log.
